#!/bin/bash
# ============================================================
# üß† PostgreSQL Auto Restore on Failure
# Phi√™n b·∫£n: 1.0 (Hau Nguyen)
# ------------------------------------------------------------
# Ki·ªÉm tra container PostgreSQL ƒë·ªãnh k·ª≥.
# N·∫øu container b·ªã l·ªói ho·∫∑c database kh√¥ng ph·∫£n h·ªìi, t·ª± ƒë·ªông
# kh√¥i ph·ª•c b·∫£n backup m·ªõi nh·∫•t b·∫±ng restore_postgres.sh.
# ============================================================

CONTAINER_NAME="${CONTAINER_NAME:-n8n_postgres}"
POSTGRES_USER="${POSTGRES_USER:-n8n_user}"
POSTGRES_DB="${POSTGRES_DB:-n8n_db}"
CHECK_INTERVAL="${CHECK_INTERVAL:-300}"   
BACKUP_DIR="${BACKUP_DIR:-/backups}"
LOG_FILE="${LOG_FILE:-/var/log/auto_restore.log}"


log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

log "üöÄ B·∫Øt ƒë·∫ßu gi√°m s√°t container PostgreSQL: $CONTAINER_NAME"
log "üïí T·∫ßn su·∫•t ki·ªÉm tra: $CHECK_INTERVAL gi√¢y"


while true; do

  if ! docker ps --filter "name=^${CONTAINER_NAME}$" --filter "status=running" | grep -q "$CONTAINER_NAME"; then
    log "‚ùå Container PostgreSQL ($CONTAINER_NAME) kh√¥ng ch·∫°y! B·∫Øt ƒë·∫ßu kh√¥i ph·ª•c..."
    ./restore_postgres.sh
    log "‚úÖ ƒê√£ ch·∫°y xong qu√° tr√¨nh kh√¥i ph·ª•c. S·∫Ω ki·ªÉm tra l·∫°i sau ${CHECK_INTERVAL}s."
  else

    docker exec "$CONTAINER_NAME" pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" > /dev/null 2>&1
    if [ $? -ne 0 ]; then
      log "‚ö†Ô∏è Database kh√¥ng ph·∫£n h·ªìi. Ti·∫øn h√†nh kh√¥i ph·ª•c..."
      ./restore_postgres.sh
      log "‚úÖ Kh√¥i ph·ª•c ho√†n t·∫•t. S·∫Ω ki·ªÉm tra l·∫°i sau ${CHECK_INTERVAL}s."
    else
      log "‚úÖ PostgreSQL ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng."
    fi
  fi

  sleep "$CHECK_INTERVAL"
done
